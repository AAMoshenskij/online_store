"""Change

Revision ID: 1b3ee1dd87a0
Revises: 5f4804efd206
Create Date: 2025-05-25 16:00:33.992582

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1b3ee1dd87a0'
down_revision: Union[str, None] = '5f4804efd206'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_activities')
    op.drop_table('sellers')
    op.drop_table('users_verifications')
    op.drop_table('users')
    op.drop_table('attribute_items')
    op.drop_table('attributes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attributes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('attributes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='attributes_pkey'),
    sa.UniqueConstraint('name', name='attributes_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('attribute_items',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('attribute_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('item', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], name='attribute_items_attribute_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='attribute_items_pkey'),
    sa.UniqueConstraint('attribute_id', 'item', name='attribute_items_attribute_id_item_key')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('is_verified_email', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=6), autoincrement=False, nullable=True),
    sa.Column('date_joined', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('users_verifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('request_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('new_email', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('new_phone', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('active_access_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='users_verifications_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_verifications_pkey'),
    sa.UniqueConstraint('user_id', name='users_verifications_user_id_key')
    )
    op.create_table('sellers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_ids', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='sellers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sellers_pkey'),
    sa.UniqueConstraint('user_id', name='sellers_user_id_key')
    )
    op.create_table('user_activities',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('timestamp', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_activities_pkey')
    )
    # ### end Alembic commands ###
